name: symfony-shop CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
      # Installation de PHP
      - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
        with:
          php-version: '8.0'

      # Récupérer le code du repo
      - uses: actions/checkout@v4

      # Copier l'environnement de test si nécessaire
      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      # Cache des dépendances Composer
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      # Installer les dépendances
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # Créer la base de données pour les tests
      - name: Create Database
        run: |
          mkdir -p data
          touch data/database.sqlite

      # Exécuter les tests PHPUnit
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
        run: vendor/bin/phpunit

      # Si PHPStan n'est pas encore installé, l'installer (optionnel)
      - name: Install PHPStan
        run: composer require --dev phpstan/phpstan

      # Lancer PHPStan pour analyser le code
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --level=max src/