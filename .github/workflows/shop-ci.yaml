on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: shop
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: shop_test
        options: >-
          --health-cmd="pg_isready -U symfony" --health-timeout=5s --health-interval=10s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      # --- Installation du driver pour le E2E ---
      - name: Install Firefox and dependencies for Geckodriver install
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox wget jq
          GECKO_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r '.tag_name')
          wget "https://github.com/mozilla/geckodriver/releases/download/${GECKO_VERSION}/geckodriver-${GECKO_VERSION}-linux64.tar.gz"
          tar -xzf "geckodriver-${GECKO_VERSION}-linux64.tar.gz"
          sudo mv geckodriver /usr/local/bin/
          geckodriver --version
          
      # --- Préparation de la BDD ---
      - name: Drop test database (if exists)
        run: php bin/console doctrine:database:drop --if-exists --env=test --force

      - name: Create test database
        run: php bin/console doctrine:database:create --no-interaction --env=test

      - name: Create schema
        run: php bin/console doctrine:schema:create --no-interaction --env=test

      - name: Load fixtures
        run: php bin/console doctrine:fixtures:load --no-interaction --env=test

      # --- Composer assets - importmap install (pour @hotwired/stimulus) ---
      - name: Install Importmap assets
        run: php bin/console importmap:install

      # --- Nettoyage cache symfony test ---
      - name: Clear Symfony cache (test env)
        run: php bin/console cache:clear --env=test

      # --- Exécution des autres tests PHPUnit ---
      - name: Run classic PHPUnit tests
        env:
          DATABASE_URL: postgresql://shop:pass@127.0.0.1:5432/shop_test
        run: ./vendor/bin/phpunit

      # --- Analyse statique (PHPStan) ---
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --level=8 src/
